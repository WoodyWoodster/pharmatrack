name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: ./api

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: |
          uv sync --group dev

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          ENVIRONMENT: test
        run: |
          uv run pytest tests/ --cov=app --cov-report=xml --cov-report=term-missing -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./api/coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  # Placeholder for future frontend tests
  # frontend-tests:
  #   name: Frontend Tests
  #   runs-on: ubuntu-latest
  #
  #   defaults:
  #     run:
  #       working-directory: ./web
  #
  #   steps:
  #   - uses: actions/checkout@v4
  #
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20'
  #       cache: 'npm'
  #       cache-dependency-path: ./web/package-lock.json
  #
  #   - name: Install dependencies
  #     run: npm ci
  #
  #   - name: Run tests
  #     run: npm test
  #
  #   - name: Run build test
  #     run: npm run build

  # Integration job that waits for all test jobs to complete
  tests-complete:
    name: All Tests Complete
    runs-on: ubuntu-latest
    needs:
      - backend-tests
      # - frontend-tests  # Uncomment when frontend tests are added

    steps:
      - name: Tests passed
        run: echo "All tests completed successfully!"
